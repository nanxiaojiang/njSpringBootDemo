#内嵌tomcat
server.port=8080

#配置服务名称
spring.application.name=06springcloudapigateway

#配置 API 网关到注册中心上，API 网关也将作为一个服务注册到 eureka-server 上
eureka.client.service-url.defaultZone=http://erueka8761:8761/eureka/,http://erueka8762:8762/eureka/

#配置路由规则
#以上配置，我们的路由规则就是匹配所有符合/api-wkcto/**的请求，只要路径中带有/api-nj/都将被转发到05springcloudfeign服务上，至于
#05springcloudfeign服务的地址到底是什么则由 eureka-server 注册中心去分析，我们只需要写上服务名即可。
#访问URL：http://localhost:8080/api-nj/hello
#zuul.routes.api-nj.path=/api-nj/**
#zuul.routes.api-nj.serviceId=05springcloudfeign
#路由规则中配置的 api-wkcto 是路由的名字，可以任意定义，但是一组 path 和serviceId 映射关系的路由名要相同。
#zuul.routes.05springcloudfeign=/api-nj2/**

#如果没有配置规则得，系统也给我们提供了一套默认的配置规则默认的配置规则如下：用服务名作为路径
#zuul.routes.05springcloudfeign.path=/05-springcloud-service-feign/**
#zuul.routes.05springcloudfeign.serviceId=05-springcloud-service-feign

#忽略掉服务提供者的默认规则(忽略掉提供者不能使用默认规则进行访问)
zuul.ignored-services=01springcloudprovider

#不给某个服务设置映射规则，这个配置我们可以进一步细化，比如说我不想给/hello 接口路由，那我们可以按如下方式配置：
#忽略掉某一些接口路径
#zuul.ignored-patterns=/**/hello/**

#我们也可以统一的为路由规则增加前缀，设置方式如下：配置网关路由的前缀
zuul.prefix=/myapi
#由于没配置路由规则使用默认，则访问链接：http://localhost:8080/myapi/05springcloudfeign/hello?token=test

#路由规则通配符含义
#   ?           匹配任意单个字符                      /05springcloudfeign/a
#   *           匹配任意字符(只包含单层路径)           /05springcloudfeign/njtest
#   **          匹配任意字符(包含多层路径)            /05springcloudfeign/njtest/a/b/c

#配置路由规则
zuul.routes.gateway.path=/gateway/**
zuul.routes.gateway.url=forward:/api/local

#禁用 zuul 默认的异常处理 SendErrorFilter 过滤器，然后自定义我们自己的ErrorFilter过滤器
#zuul.SendErrorFilter.error.disable=true